/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/ingredients/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fgogren%2Fprojects%2FDrink-Generator%2Fsrc%2Fapp%2Fingredients%2Fpage.tsx&server=false!":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fgogren%2Fprojects%2FDrink-Generator%2Fsrc%2Fapp%2Fingredients%2Fpage.tsx&server=false! ***!
  \***************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/ingredients/page.tsx */ \"(app-pages-browser)/./src/app/ingredients/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRmdvZ3JlbiUyRnByb2plY3RzJTJGRHJpbmstR2VuZXJhdG9yJTJGc3JjJTJGYXBwJTJGaW5ncmVkaWVudHMlMkZwYWdlLnRzeCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/ZWY2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9nb2dyZW4vcHJvamVjdHMvRHJpbmstR2VuZXJhdG9yL3NyYy9hcHAvaW5ncmVkaWVudHMvcGFnZS50c3hcIikiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fgogren%2Fprojects%2FDrink-Generator%2Fsrc%2Fapp%2Fingredients%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/ingredients/ingStyles.css":
/*!*******************************************!*\
  !*** ./src/app/ingredients/ingStyles.css ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"b2d658622a7b\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvaW5ncmVkaWVudHMvaW5nU3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9pbmdyZWRpZW50cy9pbmdTdHlsZXMuY3NzP2FmZjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJiMmQ2NTg2MjJhN2JcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ingredients/ingStyles.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/ingredients/drinkdb.js":
/*!****************************************!*\
  !*** ./src/app/ingredients/drinkdb.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drinkdb: function() { return /* binding */ drinkdb; }\n/* harmony export */ });\nconst drinkdb = [\n    {\n        id: \"\",\n        title: \"Rum and Coke\",\n        ingredients: [\n            \"Rum\",\n            \"Coke\"\n        ],\n        desc: [\n            \"One part rum. Two parts Coke.\",\n            \"I hope you can figue this one out.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Vodka Sprite\",\n        ingredients: [\n            \"Vodka\",\n            \"Sprite\"\n        ],\n        desc: [\n            \"One part vodka. Two parts sprite.\",\n            \"I hope you can figue this one out.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Gin and Tonic\",\n        ingredients: [\n            \"Gin\",\n            \"Tonic\"\n        ],\n        desc: [\n            \"One part gin. Two parts tonic water.\",\n            \"I hope you can figue this one out.\",\n            \"Garnish with lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Vodka Tonic\",\n        ingredients: [\n            \"Vodka\",\n            \"Tonic\"\n        ],\n        desc: [\n            \"One part vodka. Two parts tonic water.\",\n            \"I hope you can figue this one out.\",\n            \"Garnish with lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Screwdriver\",\n        ingredients: [\n            \"Vodka\",\n            \"Orange Juice\"\n        ],\n        desc: [\n            \"One part vodka. Two parts orange juice.\",\n            \"It's gonna be a good morning\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"White Russian\",\n        ingredients: [\n            \"Vodka\",\n            \"Coffee Liqueur\"\n        ],\n        desc: [\n            \"• 1 oz vodka\",\n            \"• 3/4 oz Kahlua / Coffee Liqueur\",\n            \"Fill with ice, top with cream.\",\n            \"Serve in a rocks glass (6 oz).\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Amaretto Sour\",\n        ingredients: [\n            \"Amaretto\",\n            \"Sour\"\n        ],\n        desc: [\n            \"Two parts Amareto, one part sour\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Brandy Manhattan\",\n        ingredients: [\n            \"Brandy\",\n            \"Sweet Vermouth\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz brandy\",\n            \"• 1/2 oz sweet vermouth\",\n            \"• 1 dash bitters(aromatic)\",\n            \"Stir in coctail glass(4.5 oz) over ice.\",\n            \"Add cherry (Splash of cherry juice recommended).\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Caipirinha\",\n        ingredients: [\n            \"Cacha\\xe7a\"\n        ],\n        desc: [\n            \"• 2 oz cacha\\xe7a\",\n            \"• 1/2 lime, cut into wedges\",\n            \"• 2 tsp sugar\",\n            \"Muddle lime wedges and sugar in a glass. Fill with ice and pour cacha\\xe7a over. Stir well.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Tequila Sunrise\",\n        ingredients: [\n            \"Tequila\",\n            \"Orange Juice\",\n            \"Grenadine\"\n        ],\n        desc: [\n            \"• 2 oz tequila\",\n            \"• 4 oz orange juice\",\n            \"• 1/2 oz grenadine\",\n            \"Pour tequila and orange juice over ice in a highball glass. Slowly pour grenadine into the glass, it will sink and gradually rise to mix with the other ingredients naturally.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Dark 'n' Stormy\",\n        ingredients: [\n            \"Rum\",\n            \"Ginger Beer\"\n        ],\n        desc: [\n            \"• 2 oz dark rum\",\n            \"• 4 oz ginger beer\",\n            \"• 1/2 oz lime juice\",\n            \"Build over ice in a highball glass. Stir gently and garnish with lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Moscow Mule\",\n        ingredients: [\n            \"Vodka\",\n            \"Ginger Beer\",\n            \"Lime Juice\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 4 oz ginger beer\",\n            \"• 1/2 oz lime juice\",\n            \"Build over ice in a copper mug. Stir gently and garnish with a lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Blue Lagoon\",\n        ingredients: [\n            \"Vodka\",\n            \"Blue Curacao\",\n            \"Lemonade\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz blue curacao\",\n            \"• 4 oz lemonade\",\n            \"Build over ice in a highball glass. Stir gently and garnish with a lemon slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Sex on the Beach\",\n        ingredients: [\n            \"Vodka\",\n            \"Peach Schnapps\",\n            \"Cranberry Juice\",\n            \"Orange Juice\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz peach schnapps\",\n            \"• 2 oz cranberry juice\",\n            \"• 2 oz orange juice\",\n            \"Build over ice in a highball glass. Stir gently and garnish with an orange slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Whiskey Sour (with Sour Mix)\",\n        ingredients: [\n            \"Whiskey\",\n            \"Sour\"\n        ],\n        desc: [\n            \"• 2 oz whiskey\",\n            \"• 3 oz sour mix\",\n            \"Shake with ice and strain into a rocks glass filled with ice. Garnish with a cherry and/or lemon slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Tequila Sour (with Sour Mix)\",\n        ingredients: [\n            \"Tequila\",\n            \"Sour\"\n        ],\n        desc: [\n            \"• 2 oz tequila\",\n            \"• 3 oz sour mix\",\n            \"Shake with ice and strain into a rocks glass filled with ice. Garnish with a lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Whiskey Sour\",\n        ingredients: [\n            \"Whiskey\",\n            \"Lemon Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz whiskey\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Shake with ice and strain into a rocks glass filled with ice. Garnish with a cherry and/or lemon slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Amaretto Sour\",\n        ingredients: [\n            \"Amaretto\",\n            \"Lemon Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz amaretto\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Shake with ice and strain into a rocks glass filled with ice. Garnish with a cherry.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Tequila Sour\",\n        ingredients: [\n            \"Tequila\",\n            \"Lime Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz tequila\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Shake with ice and strain into a rocks glass filled with ice. Garnish with a lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Aperol Spritz\",\n        ingredients: [\n            \"Aperol\",\n            \"Prosecco\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 2 oz Aperol\",\n            \"• 3 oz prosecco\",\n            \"• Splash of club soda\",\n            \"Build over ice in a wine glass. Stir gently and garnish with an orange slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Paloma\",\n        ingredients: [\n            \"Tequila\",\n            \"Grapefruit Juice\",\n            \"Club Soda\",\n            \"Lime Juice\"\n        ],\n        desc: [\n            \"• 2 oz tequila\",\n            \"• 4 oz grapefruit juice and soda\",\n            \"• 1/2 oz lime juice\",\n            \"Rim a glass with salt. Fill the glass with ice, add tequila and lime juice, top with grapefruit juice and soda, and stir gently.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"French Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Raspberry Liqueur\",\n            \"Pineapple Juice\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz Chambord\",\n            \"• 1 1/2 oz pineapple juice\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a raspberry or pineapple slice.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Gimlet\",\n        ingredients: [\n            \"Gin\",\n            \"Lime Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a lime wheel or twist.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Mimosa\",\n        ingredients: [\n            \"Champagne\",\n            \"Orange Juice\"\n        ],\n        desc: [\n            \"• 2 oz champagne\",\n            \"• 2 oz orange juice\",\n            \"Pour orange juice into a champagne flute. Top with champagne.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Blue Hawaiian\",\n        ingredients: [\n            \"Rum\",\n            \"Blue Curacao\",\n            \"Coconut Milk\",\n            \"Pineapple Juice\"\n        ],\n        desc: [\n            \"• 2 oz light rum\",\n            \"• 1 oz blue curacao\",\n            \"• 1 oz coconut cream\",\n            \"• 2 oz pineapple juice\",\n            \"Shake with ice and strain into a glass filled with crushed ice. Garnish with a pineapple slice and cherry.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Cranberry Moscow Mule\",\n        ingredients: [\n            \"Vodka\",\n            \"Ginger Beer\",\n            \"Lime Juice\",\n            \"Cranberry Juice\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 4 oz ginger beer\",\n            \"• 1/2 oz lime juice\",\n            \"• 1 oz cranberry juice\",\n            \"• Fresh cranberries for garnish\",\n            \"Build over ice in a copper mug. Stir gently and garnish with fresh cranberries and a lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Cuba Libre\",\n        ingredients: [\n            \"Rum\",\n            \"Coke\"\n        ],\n        desc: [\n            \"• 2 oz rum\",\n            \"• 4 oz cola\",\n            \"• Squeeze of lime juice\",\n            \"Build over ice in a highball glass. Stir gently and garnish with a lime wedge.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Black Russian\",\n        ingredients: [\n            \"Vodka\",\n            \"Coffee Liqueur\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 3/4 oz coffee liqueur\",\n            \"Build over ice in an old-fashioned glass. Stir gently.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Americano\",\n        ingredients: [\n            \"Campari\",\n            \"Sweet Vermouth\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 1 oz Campari\",\n            \"• 1 oz sweet vermouth\",\n            \"• Club soda\",\n            \"Build over ice in a highball glass. Top with club soda and stir gently. Garnish with an orange twist.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Godfather\",\n        ingredients: [\n            \"Whisky\",\n            \"Amaretto\"\n        ],\n        desc: [\n            \"• 1 1/2 oz scotch whisky\",\n            \"• 3/4 oz amaretto\",\n            \"Build over ice in an old-fashioned glass. Stir gently.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Classic Martini\",\n        ingredients: [\n            \"Gin\",\n            \"Dry Vermouth\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 1/2 oz dry vermouth\",\n            \"Stir with ice and strain into a chilled martini glass. Garnish with a lemon twist or olive.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Vodka Martini (Vodkatini)\",\n        ingredients: [\n            \"Vodka\",\n            \"Dry Vermouth\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 1/2 oz dry vermouth\",\n            \"Stir with ice and strain into a chilled martini glass. Garnish with a lemon twist or olive.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Cosmopolitan Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Orange Liqueur\",\n            \"Cranberry Juice\",\n            \"Lime Juice\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz triple sec / orange liqueur\",\n            \"• 1/2 oz cranberry juice\",\n            \"• 1/4 oz lime juice\",\n            \"Shake with ice and strain into a chilled martini glass. Garnish with a lime twist.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Appletini\",\n        ingredients: [\n            \"Vodka\",\n            \"Apple Liqueur\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 1/2 oz sour apple liqueur\",\n            \"Shake with ice and strain into a chilled martini glass. Garnish with a slice of apple.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Chocolate Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Chocolate Liqueur\",\n            \"Cream\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz chocolate liqueur\",\n            \"• 1/2 oz cream\",\n            \"Shake with ice and strain into a chilled martini glass. Garnish with shaved chocolate.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Lemon Drop Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Orange Liqueur\",\n            \"Lemon Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 1/2 oz triple sec / orange liqueur\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1/4 oz simple syrup\",\n            \"Shake with ice and strain into a chilled martini glass rimmed with sugar. Garnish with a lemon twist.\"\n        ],\n        diff: \"Easy\"\n    },\n    {\n        id: \"\",\n        title: \"Coconut Pineapple Martini\",\n        ingredients: [\n            \"Coconut Rum\",\n            \"Pineapple Juice\",\n            \"Coconut Milk\",\n            \"Lime Juice\"\n        ],\n        desc: [\n            \"• 2 oz coconut rum\",\n            \"• 1 oz pineapple juice\",\n            \"• 1/2 oz coconut milk\",\n            \"• 1/2 oz lime juice\",\n            \"Shake with ice and strain into a chilled martini glass. Garnish with a pineapple slice or lime wheel.\"\n        ],\n        diff: \"Easy\"\n    },\n    //Medium Starts\n    {\n        id: \"\",\n        title: \"Raspberry Mojito\",\n        ingredients: [\n            \"Rum\",\n            \"Mint\",\n            \"Simple Syrup\",\n            \"Lime Juice\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 2 oz white rum\",\n            \"• 8-10 fresh mint leaves\",\n            \"• 6 fresh raspberries\",\n            \"• 3/4 oz simple syrup\",\n            \"• 3/4 oz lime juice\",\n            \"• Club soda\",\n            \"Muddle mint leaves, raspberries, simple syrup, and lime juice in a glass. Fill the glass with ice, add rum, and top with club soda. Stir gently and garnish with a mint sprig and raspberry.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Rob Roy\",\n        ingredients: [\n            \"Whisky\",\n            \"Sweet Vermouth\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz scotch whisky\",\n            \"• 1 oz sweet vermouth\",\n            \"• 2 dashes Angostura bitters\",\n            \"Stir with ice and strain into a chilled cocktail glass. Garnish with a cherry.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Long Island Iced Tea\",\n        ingredients: [\n            \"Gin\",\n            \"Vodka\",\n            \"Rum\",\n            \"Tequila\",\n            \"Orange Liqueur\",\n            \"Lemon Juice\",\n            \"Coke\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 1 oz vodka\",\n            \"• 1 oz gin\",\n            \"• 1 oz rum(light)\",\n            \"• 1 oz tequila(light)\",\n            \"• 1 oz Triple Sec / Orange Liqueur\",\n            \"• 1 oz lemon juice\",\n            \"• 3/4 oz simple syrup\",\n            \"Shake everything except for the Cola, and strain into an ice-filled collins glass. Top with cola. Add the garnish Serve in a collins glass (12.0 oz)\",\n            \"Garnish with lemon wedge.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Negroni\",\n        ingredients: [\n            \"Gin\",\n            \"Sweet Vermouth\",\n            \"Campari\"\n        ],\n        desc: [\n            \"• 1 oz gin\",\n            \"• 1 oz sweet vermouth\",\n            \"• 1 oz Campari\",\n            \"Stir in mixing glass with ice. Strain\",\n            \"Garnish with orange peel.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Espresso Matini\",\n        ingredients: [\n            \"Vodka\",\n            \"Coffee Liqueur\",\n            \"Espresso Coffee\"\n        ],\n        desc: [\n            \"• 1 oz vodka\",\n            \"• 1 oz Kahlua / Coffee Liqueur\",\n            \"• 1 oz espresso coffee\",\n            \"Shake with ice in cocktail shaker and strain.\",\n            \"Garnish with coffee beans. Serve in a cocktail glass (4.5 oz).\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Old Fashioned\",\n        ingredients: [\n            \"Bitters\",\n            \"Bourbon\"\n        ],\n        desc: [\n            \"• 2 Dashes Bitters (Aromatic)\",\n            \"• 1/2 tsp sugar\",\n            \"• 2 oz bourbon\",\n            \"Muddle cherry and orange slice until sugar is dissolved.\",\n            \"Fill with ice, top with sprit (optional) to taste.\",\n            \"Garnish with lemon wedge.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Margarita\",\n        ingredients: [\n            \"Tequila\",\n            \"Lime Juice\",\n            \"Orange Liqueur\"\n        ],\n        desc: [\n            \"• 1 1/2 oz tequila\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/2 oz Triple Sec / Orange Liqueur\",\n            \"Shake in iced coctail shaker, strain.\",\n            \"Serve in coctail glass (4.5oz).\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Mojito\",\n        ingredients: [\n            \"Mint\",\n            \"Club Soda\",\n            \"Rum\"\n        ],\n        desc: [\n            \"• 4 Lime Wedges\",\n            \"• 8 - 10 mint leaves\",\n            \"• 2 oz rum(light)\",\n            \"2 - 3 tsp sugar\",\n            \"Muddle lime wedges, mint, and sugar until sugar is dissolved or mint is thoroughly broken up.\",\n            \"Add ice and rum, mix and strain\",\n            \"Top with club soda. Garnish with mint.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Martini\",\n        ingredients: [\n            \"Gin\",\n            \"Dry Vermouth\"\n        ],\n        desc: [\n            \"• 2 1/2 oz gin\",\n            \"• 1/2 oz dry vermouth\",\n            \"Stir with ice, then strain into a chilled cocktail glass. Garnish with olive or lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Cosmopolitan\",\n        ingredients: [\n            \"Vodka\",\n            \"Orange Liqueur\",\n            \"Cranberry Juice\",\n            \"Lime Juice\"\n        ],\n        desc: [\n            \"• 1 1/2 oz vodka\",\n            \"• 1/2 oz Triple Sec\",\n            \"• 1/2 oz cranberry juice\",\n            \"• 1/2 oz lime juice\",\n            \"Shake with ice, then strain into a chilled cocktail glass. Garnish with lime wheel or twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"French 75\",\n        ingredients: [\n            \"Gin\",\n            \"Champagne\",\n            \"Lemon Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 1 oz gin\",\n            \"• 1/2 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Top with champagne. Stir gently.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Pi\\xf1a Colada\",\n        ingredients: [\n            \"Rum\",\n            \"Coconut Milk\",\n            \"Pineapple Juice\"\n        ],\n        desc: [\n            \"• 2 oz rum\",\n            \"• 1 1/2 oz coconut cream\",\n            \"• 1 1/2 oz pineapple juice\",\n            \"Blend with crushed ice until smooth. Serve in a chilled glass. Garnish with pineapple wedge and cherry.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Tom Collins\",\n        ingredients: [\n            \"Gin\",\n            \"Lemon Juice\",\n            \"Simple Syrup\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 1 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Top with club soda. Stir gently. Garnish with lemon slice and cherry.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Singapore Sling\",\n        ingredients: [\n            \"Gin\",\n            \"Cherry Liqueur\",\n            \"Orange Liqueur\",\n            \"Benedictine\",\n            \"Pineapple Juice\",\n            \"Lime Juice\",\n            \"Grenadine\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 1 1/2 oz gin\",\n            \"• 1/2 oz cherry liqueur\",\n            \"• 1/4 oz Cointreau\",\n            \"• 1/4 oz Benedictine\",\n            \"• 4 oz pineapple juice\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/4 oz grenadine\",\n            \"• A dash of Angostura bitters\",\n            \"Shake all ingredients with ice except bitters. Strain into a highball glass filled with ice. Add bitters and garnish with a cherry and a slice of pineapple.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Pisco Sour\",\n        ingredients: [\n            \"Pisco\",\n            \"Lime Juice\",\n            \"Simple Syrup\",\n            \"Egg White\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz pisco\",\n            \"• 1 oz lime juice\",\n            \"• 3/4 oz simple syrup\",\n            \"• 1 egg white\",\n            \"Dry shake all ingredients without ice to emulsify egg white. Add ice and shake again. Strain into a rocks glass. Add a few drops of Angostura bitters on top.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Mint Julep\",\n        ingredients: [\n            \"Bourbon\",\n            \"Simple Syrup\",\n            \"Mint\"\n        ],\n        desc: [\n            \"• 2 oz bourbon\",\n            \"• 1/2 oz simple syrup\",\n            \"• 8-10 fresh mint leaves\",\n            \"Muddle mint leaves and simple syrup in a glass. Fill the glass with crushed ice, add bourbon, and stir gently. Garnish with a mint sprig.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Planter's Punch\",\n        ingredients: [\n            \"Rum\",\n            \"Orange Juice\",\n            \"Pineapple Juice\",\n            \"Lemon Juice\",\n            \"Grenadine\",\n            \"Simple Syrup\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz dark rum\",\n            \"• 1 oz orange juice\",\n            \"• 1 oz pineapple juice\",\n            \"• 1/2 oz lemon juice\",\n            \"• 1/4 oz grenadine\",\n            \"• 1/4 oz simple syrup\",\n            \"• A few dashes of Angostura bitters\",\n            \"Shake all ingredients with ice and strain into a glass filled with ice. Garnish with a cherry and orange slice.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Gin Fizz\",\n        ingredients: [\n            \"Gin\",\n            \"Lemon Juice\",\n            \"Simple Syrup\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"• Club soda\",\n            \"Shake gin, lemon juice, and simple syrup with ice. Strain into a highball glass over ice. Top with club soda and stir gently.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Sidecar\",\n        ingredients: [\n            \"Brandy\",\n            \"Orange Liqueur\",\n            \"Lemon Juice\"\n        ],\n        desc: [\n            \"• 2 oz brandy(cognac)\",\n            \"• 1 oz triple sec / orange liqueur\",\n            \"• 3/4 oz lemon juice\",\n            \"Shake with ice and strain into a chilled cocktail glass with a sugared rim. Garnish with a lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"White Lady\",\n        ingredients: [\n            \"Gin\",\n            \"Orange Liqueur\",\n            \"Lemon Juice\",\n            \"Egg White\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 1 oz triple sec / orange liqueur\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1 egg white\",\n            \"Dry shake all ingredients without ice to emulsify egg white. Add ice and shake again. Strain into a chilled cocktail glass. Garnish with a lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Boulevardier\",\n        ingredients: [\n            \"Bourbon\",\n            \"Sweet Vermouth\",\n            \"Campari\"\n        ],\n        desc: [\n            \"• 1 1/2 oz bourbon\",\n            \"• 1 oz sweet vermouth\",\n            \"• 1 oz Campari\",\n            \"Stir with ice and strain into a chilled cocktail glass. Garnish with an orange twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Corpse Reviver No. 2\",\n        ingredients: [\n            \"Gin\",\n            \"Lillet Blanc\",\n            \"Orange Liqueur\",\n            \"Lemon Juice\",\n            \"Absinthe\"\n        ],\n        desc: [\n            \"• 1 oz gin\",\n            \"• 1 oz Lillet Blanc\",\n            \"• 1 oz triple sec\",\n            \"• 1 oz lemon juice\",\n            \"• Dash of absinthe\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a cherry or lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Mai Tai\",\n        ingredients: [\n            \"Rum\",\n            \"Rum\",\n            \"Orange Liqueur\",\n            \"Orgeat Syrup\",\n            \"Lime Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 1 1/2 oz light rum\",\n            \"• 1/2 oz dark rum\",\n            \"• 1/2 oz orange curacao / liqueur\",\n            \"• 1/2 oz orgeat syrup\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/4 oz simple syrup\",\n            \"Shake all ingredients with ice and strain into a rocks glass filled with crushed ice. Garnish with a mint sprig and lime wedge.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Brandy Alexander\",\n        ingredients: [\n            \"Brandy\",\n            \"Chocolate Liqueur\",\n            \"Cream\"\n        ],\n        desc: [\n            \"• 1 1/2 oz brandy\",\n            \"• 1 oz dark creme de cacao\",\n            \"• 1 oz cream\",\n            \"• Nutmeg\",\n            \"Shake brandy, creme de cacao, and cream with ice. Strain into a chilled cocktail glass. Garnish with grated nutmeg.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Bee's Knees\",\n        ingredients: [\n            \"Gin\",\n            \"Lemon Juice\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 3/4 oz honey syrup (equal parts honey and water)\",\n            \"• 3/4 oz lemon juice\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Vesper Martini\",\n        ingredients: [\n            \"Gin\",\n            \"Vodka\",\n            \"Lillet Blanc\"\n        ],\n        desc: [\n            \"• 1 1/2 oz gin\",\n            \"• 1/2 oz vodka\",\n            \"• 1/2 oz Lillet Blanc\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a lemon twist.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Blood and Sand\",\n        ingredients: [\n            \"Scotch Whisky\",\n            \"Sweet Vermouth\",\n            \"Cherry Liqueur\",\n            \"Orange Juice\"\n        ],\n        desc: [\n            \"• 3/4 oz scotch whisky\",\n            \"• 3/4 oz sweet vermouth\",\n            \"• 3/4 oz cherry liqueur\",\n            \"• 3/4 oz orange juice\",\n            \"Shake with ice and strain into a chilled cocktail glass. Garnish with a cherry.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Cucumber Basil Smash\",\n        ingredients: [\n            \"Gin\",\n            \"Lemon Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 3 slices cucumber\",\n            \"• 4-6 basil leaves\",\n            \"• 3/4 oz lemon juice\",\n            \"• 1/2 oz simple syrup\",\n            \"Muddle cucumber slices and basil leaves with lemon juice and simple syrup in a shaker. Add gin and ice, then shake and strain into a rocks glass filled with ice. Garnish with a cucumber slice and basil leaf.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Grapefruit Gin Fizz\",\n        ingredients: [\n            \"Gin\",\n            \"Grapefruit Juice\",\n            \"Lime Juice\",\n            \"Simple Syrup\",\n            \"Club Soda\"\n        ],\n        desc: [\n            \"• 2 oz gin\",\n            \"• 1 oz grapefruit juice\",\n            \"• 1/2 oz lime juice\",\n            \"• 1/2 oz simple syrup\",\n            \"• Club soda\",\n            \"Shake gin, grapefruit juice, lime juice, and simple syrup with ice. Strain into a highball glass over ice. Top with club soda and stir gently.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Spicy Margarita Martini\",\n        ingredients: [\n            \"Tequila\",\n            \"Orange Liqueur\",\n            \"Lime Juice\",\n            \"Simple Syrup\"\n        ],\n        desc: [\n            \"• 2 oz tequila\",\n            \"• 1/2 oz triple sec\",\n            \"• 3/4 oz lime juice\",\n            \"• 1/4 oz simple syrup\",\n            \"• Dash of hot sauce\",\n            \"Shake with ice and strain into a chilled martini glass rimmed with salt and chili powder. Garnish with a lime wheel.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Peach Basil Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Peach Schnapps\",\n            \"Simple Syrup\",\n            \"Lemon Juice\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 1/2 oz peach schnapps\",\n            \"• 3-4 basil leaves\",\n            \"• 1/2 oz simple syrup\",\n            \"• 1/2 oz lemon juice\",\n            \"Muddle basil leaves with simple syrup and lemon juice in a shaker. Add vodka, schnapps, and ice. Shake well and strain into a chilled martini glass. Garnish with a basil leaf or peach slice.\"\n        ],\n        diff: \"Medium\"\n    },\n    {\n        id: \"\",\n        title: \"Cranberry Orange Martini\",\n        ingredients: [\n            \"Vodka\",\n            \"Cranberry Juice\",\n            \"Orange Liqueur\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz vodka\",\n            \"• 1 oz cranberry juice\",\n            \"• 1/2 oz orange liqueur\",\n            \"• Dash of orange bitters\",\n            \"• Orange peel for garnish\",\n            \"Shake with ice and strain into a chilled martini glass. Garnish with a twist of orange peel.\"\n        ],\n        diff: \"Medium\"\n    },\n    //Advanced Starts\n    {\n        id: \"\",\n        title: \"Sazerac\",\n        ingredients: [\n            \"Whiskey\",\n            \"Absinthe\",\n            \"Bitters\"\n        ],\n        desc: [\n            \"• 2 oz whiskey(rye))\",\n            \"• 1/4 oz absinthe\",\n            \"• 3 dashes (Peychaud's/Sweet) bitters\",\n            \"• 1 sugar cube\",\n            \"Muddle the sugar cube with bitters in a glass. Add ice and whiskey. Rinse another glass with absinthe, then strain the whiskey mixture into it.\"\n        ],\n        diff: \"Hard\"\n    }\n];\n// {id: '', title: \"\", ingredients: [], desc: [], diff: \"\"},\n// • (option + 8)\n// Don't know if I'll need id's but oh well\nfor(let i = 0; i < drinkdb.length; i++){\n    drinkdb[i].id = i.toString();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ingredients/drinkdb.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/ingredients/drinklist.ts":
/*!******************************************!*\
  !*** ./src/app/ingredients/drinklist.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drinkList: function() { return /* binding */ drinkList; }\n/* harmony export */ });\n/* harmony import */ var _drinkdb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drinkdb */ \"(app-pages-browser)/./src/app/ingredients/drinkdb.js\");\n\nfunction findDrinksFromIngredients(ingredients) {\n    let compatibleDrinks = [];\n    // console.log(drinkdb)\n    for(let i = 0; i < _drinkdb__WEBPACK_IMPORTED_MODULE_0__.drinkdb.length; i++){\n        let drinkFits = false;\n        for(let j = 0; j < _drinkdb__WEBPACK_IMPORTED_MODULE_0__.drinkdb[i].ingredients.length; j++){\n            // console.log(drinkdb[i].ingredients.length)\n            // console.log(\"J:\", j)\n            let ingredientFits = false;\n            for(let k = 0; k < ingredients.length; k++){\n                // console.log(\"ING\",ingredients[k].title)\n                // console.log(\"DB\", drinkdb[i].ingredients[j])\n                if (_drinkdb__WEBPACK_IMPORTED_MODULE_0__.drinkdb[i].ingredients[j] == ingredients[k].title) {\n                    // console.log(\"MATCH\")\n                    ingredientFits = true;\n                }\n            }\n            if (ingredientFits) {\n                // console.log(\"ingredient fits\")\n                drinkFits = true;\n            } else if (!ingredientFits) {\n                drinkFits = false; // Ingredient not in, pass by\n                break;\n            }\n        }\n        if (drinkFits) {\n            compatibleDrinks.push(_drinkdb__WEBPACK_IMPORTED_MODULE_0__.drinkdb[i]);\n        }\n    }\n    return compatibleDrinks;\n}\nfunction cleanUpIngredients(ingredients) {\n    var punctuation = /[\\.,-?! ']/g;\n    for(let i = 0; i < ingredients.length; i++){\n        let ing = ingredients[i].title.toLowerCase().trim().replace(punctuation, \"\");\n        // console.log(ing)\n        if (ing == \"coke\" || ing == \"cocacola\" || ing == \"pepsi\" || ing == \"cola\") {\n            ingredients[i].title = \"Coke\";\n        } else if (ing == \"rum\" || ing == \"captain\" || ing == \"captainmorgan\" || ing == \"spicedrum\") {\n            ingredients[i].title = \"Rum\";\n        } else if (ing == \"tonic\" || ing == \"tonicwater\") {\n            ingredients[i].title = \"Tonic\";\n        } else if (ing == \"gin\") {\n            ingredients[i].title = \"Gin\";\n        } else if (ing == \"vodka\" || ing == \"svedka\" || ing == \"smirnoff\") {\n            ingredients[i].title = \"Vodka\";\n        } else if (ing == \"baileys\" || ing == \"irishcream\" || ing == \"irishcreame\") {\n            ingredients[i].title = \"Irish Cream\";\n        } else if (ing == \"sprite\" || ing == \"7up\" || ing == \"lemonlime\" || ing == \"sierramist\" || ing == \"starry\") {\n            ingredients[i].title = \"Sprite\";\n        } else if (ing == \"triplesec\" || ing == \"orangeliqueur\" || ing == \"orangeliquer\" || ing == \"orangecuracao\" || ing == \"cointreau\") {\n            ingredients[i].title = \"Orange Liqueur\";\n        } else if (ing == \"lemonjuice\") {\n            ingredients[i].title = \"Lemon Juice\";\n        } else if (ing == \"limejuice\") {\n            ingredients[i].title = \"Lime Juice\";\n        } else if (ing == \"tequila\" || ing == \"tequilla\" || ing == \"josecuervo\" || ing == \"patron\") {\n            ingredients[i].title = \"Tequila\";\n        } else if (ing == \"simplesyrup\") {\n            ingredients[i].title = \"Simple Syrup\";\n        } else if (ing == \"sweetvermouth\") {\n            ingredients[i].title = \"Sweet Vermouth\";\n        } else if (ing == \"vermouth\" || ing == \"dryvermouth\") {\n            ingredients[i].title = \"Dry Vermouth\";\n        } else if (ing == \"campari\" || ing == \"camperi\") {\n            ingredients[i].title = \"Campari\";\n        } else if (ing == \"sour\" || ing == \"sourmix\") {\n            ingredients[i].title = \"Sour\";\n        } else if (ing == \"whiskey\" || ing == \"scotch\" || ing == \"whisky\") {\n            ingredients[i].title = \"Whiskey\";\n        } else if (ing == \"orangejuice\") {\n            ingredients[i].title = \"Orange Juice\";\n        } else if (ing == \"soda\" || ing == \"sodawater\" || ing == \"charge\" || ing == \"chargewater\" || ing == \"sparklingwater\" || ing == \"clubsoda\") {\n            ingredients[i].title = \"Club Soda\";\n        } else if (ing == \"kahlua\" || ing == \"khalua\" || ing == \"mrblack\" || ing == \"coffeeliquer\" || ing == \"coffeeliqueur\") {\n            ingredients[i].title = \"Coffee Liqueur\";\n        } else if (ing == \"espresso\" || ing == \"espressoshot\" || ing == \"espressoshots\" || ing == \"coffee\" || ing == \"espressocoffee\" || ing == \"expresso\" || ing == \"expressoshot\") {\n            ingredients[i].title = \"Espresso Coffee\";\n        } else if (ing == \"bitters\" || ing == \"orangebitters\" || ing == \"citrusbitters\" || ing == \"aromaticbitters\" || ing == \"fruitbitters\" || ing == \"spicedbitters\" || ing == \"floralbitters\" || ing == \"cocoabitters\" || ing == \"chocolatebitters\" || ing == \"amarodiangostura\" || ing == \"angostura\") {\n            ingredients[i].title = \"Bitters\";\n        } else if (ing == \"bourbon\" || ing == \"buorbon\" || ing == \"jack\" || ing == \"jackdaniels\" || ing == \"jimbeam\" || ing == \"jim\" || ing == \"beam\" || ing == \"makersmark\" || ing == \"makers\") {\n            ingredients[i].title = \"Bourbon\";\n        } else if (ing == \"amaretto\" || ing == \"ameretto\" || ing == \"italianliqueur\" || ing == \"disaronno\" || ing == \"diseronno\") {\n            ingredients[i].title = \"Amaretto\";\n        } else if (ing == \"mint\" || ing == \"mintleaves\") {\n            ingredients[i].title = \"Mint\";\n        } else if (ing == \"brandy\" || ing == \"calvados\" || ing == \"korbel\") {\n            ingredients[i].title = \"Brandy\";\n        } else if (ing == \"cranberryjuice\" || ing == \"cranberry\") {\n            ingredients[i].title = \"Cranberry Juice\";\n        } else if (ing == \"champagne\") {\n            ingredients[i].title = \"Champagne\";\n        } else if (ing == \"coconutcream\" || ing == \"coconutmilk\") {\n            ingredients[i].title = \"Coconut Milk\";\n        } else if (ing == \"grenadine\" || ing == \"grenedine\") {\n            ingredients[i].title = \"Grenadine\";\n        } else if (ing == \"absinthe\") {\n            ingredients[i].title = \"Absinthe\";\n        } else if (ing == \"cherryliqueur\" || ing == \"cherryliquer\" || ing == \"cheryydrmcgillicuddys\" || ing == \"drmcgillicuddyscherry\") {\n            ingredients[i].title = \"Cherry Liqueur\";\n        } else if (ing == \"benedictine\") {\n            ingredients[i].title = \"Benedictine\";\n        } else if (ing == \"pineapplejuice\" || ing == \"pineapple\") {\n            ingredients[i].title = \"Pineapple Juice\";\n        } else if (ing == \"cacha\\xe7a\" || ing == \"cachaca\") {\n            ingredients[i].title = \"Cacha\\xe7a\";\n        } else if (ing == \"gingerbeer\") {\n            ingredients[i].title = \"Ginger Beer\";\n        } else if (ing == \"bluecuracao\" || ing == \"curacao\") {\n            ingredients[i].title = \"Blue Curacao\";\n        } else if (ing == \"lemonade\" || ing == \"lemonaid\") {\n            ingredients[i].title = \"Lemonade\";\n        } else if (ing == \"peachschnapps\" || ing == \"peachschnaps\") {\n            ingredients[i].title = \"Peach Schnapps\";\n        } else if (ing == \"egg\" || ing == \"eggwhite\" || ing == \"eggwhites\" || ing == \"eggs\") {\n            ingredients[i].title = \"Egg White\";\n        } else if (ing == \"pisco\") {\n            ingredients[i].title = \"Pisco\";\n        } else if (ing == \"aperol\") {\n            ingredients[i].title = \"Aperol\";\n        } else if (ing == \"prosecco\") {\n            ingredients[i].title = \"Prosecco\";\n        } else if (ing == \"grapefruitjuice\") {\n            ing = \"Grapefruit Juice\";\n        } else if (ing == \"chambord\" || ing == \"raspberryliqueur\" || ing == \"raspberryliquer\") {\n            ingredients[i].title = \"Raspberry Liqueur\";\n        } else if (ing == \"lilletblanc\") {\n            ingredients[i].title = \"Lillet Blanc\";\n        } else if (ing == \"orgeatsyrup\") {\n            ingredients[i].title = \"Orgeat Syrup\";\n        } else if (ing == \"darkcreamdecacao\" || ing == \"cremedecacao\" || ing == \"chocolateliqueur\") {\n            ingredients[i].title = \"Chocolate Liqueur\";\n        } else if (ing == \"cream\" || ing == \"halfandhalf\") {\n            ingredients[i].title = \"Cream\";\n        } else if (ing == \"sourappleliqueur\" || ing == \"appleliqueur\" || ing == \"greenappleliqueur\") {\n            ingredients[i].title = \"Apple Liqueur\";\n        } else if (ing == \"coconutrum\" || ing == \"malibu\") {\n            ingredients[i].title = \"Coconut Rum\";\n        } else {\n            ingredients[i].title += \" (Not found in database)\";\n        }\n    }\n}\nfunction drinkList(ingredients) {\n    // console.log(ingredients);\n    cleanUpIngredients(ingredients);\n    return findDrinksFromIngredients(ingredients);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ingredients/drinklist.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/ingredients/page.tsx":
/*!**************************************!*\
  !*** ./src/app/ingredients/page.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ingredients; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _drinklist__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./drinklist */ \"(app-pages-browser)/./src/app/ingredients/drinklist.ts\");\n/* harmony import */ var _ingStyles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ingStyles.css */ \"(app-pages-browser)/./src/app/ingredients/ingStyles.css\");\n/* eslint-disable react/jsx-key */ /* eslint-disable react-hooks/rules-of-hooks */ /* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction ingredients() {\n    _s();\n    const [inputText, setInputText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [ingredients, setIngredients] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [editMode, setEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [drinks, setDrinks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIngredients((currentItems)=>{\n            const trimmedText = inputText.trim();\n            if (trimmedText === \"\") {\n                return currentItems;\n            }\n            return [\n                ...currentItems,\n                {\n                    id: crypto.randomUUID(),\n                    title: inputText\n                }\n            ];\n        });\n        setInputText(\"\") // Clears search box after each add\n        ;\n    }\n    function editStart(id) {\n        deleteIngredient(id);\n        setEditMode(true);\n    }\n    function editStop() {\n        handleSubmit;\n        setEditMode(false);\n    }\n    function deleteIngredient(id) {\n        setIngredients((currentItems)=>{\n            return currentItems.filter((indredient)=>indredient.id !== id);\n        });\n    }\n    function initDrinks(ingList) {\n        setDrinks((0,_drinklist__WEBPACK_IMPORTED_MODULE_2__.drinkList)(ingList));\n    }\n    function clearAll() {\n        setDrinks([]);\n        setIngredients([]);\n    }\n    if (editMode) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center gap-8 pt-8 bg-violet-200 pb-32\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-2xl\",\n                    children: \"Edit Ingredient\"\n                }, void 0, false, {\n                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                    lineNumber: 74,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Enter New Ingredient\",\n                        className: \"rounded-md shadow-md text-lg\",\n                        value: inputText,\n                        onChange: (e)=>setInputText(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 76,\n                        columnNumber: 21\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                    lineNumber: 75,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>editStop(),\n                        className: \"text-xl bg-green-600 rounded-md shadow-lg text-white px-2 py-1 hover:bg-green-800\",\n                        children: \"Done\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 79,\n                        columnNumber: 21\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                    lineNumber: 78,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n            lineNumber: 73,\n            columnNumber: 13\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col items-center gap-8 pt-8 bg-slate-800 pb-32\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-2xl text-white\",\n                children: \"List of Ingredients\"\n            }, void 0, false, {\n                fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                lineNumber: 87,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"flex gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"text-2xl rounded shadow-md\",\n                        type: \"text\",\n                        placeholder: \"Enter Ingredients\",\n                        value: inputText,\n                        onChange: (e)=>setInputText(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 89,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"text-xl bg-blue-400 rounded-md shadow-lg text-white px-3 py-1 hover:bg-blue-800\",\n                        children: \"Add\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 90,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"text-xl bg-red-700 shadow-lg text-white rounded-md px-3 py-1 hover:bg-red-900\",\n                        children: \"Clear\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 91,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                lineNumber: 88,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"w-5/6 flex flex-col gap-2\",\n                children: [\n                    ingredients.length === 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-white self-center\",\n                        children: \"No Ingredients Listed\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 94,\n                        columnNumber: 47\n                    }, this),\n                    ingredients.map((ingredient)=>{\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"bg-blue-300 flex justify-between items-center gap-2 p-2 rounded-lg shadow-md\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-lg\",\n                                    children: ingredient.title\n                                }, ingredient.id, false, {\n                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                    lineNumber: 98,\n                                    columnNumber: 29\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex gap-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>editStart(ingredient.id),\n                                            className: \"text-xl bg-blue-400 rounded-md shadow-lg text-white px-1 hover:bg-blue-800\",\n                                            children: \"Edit\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                            lineNumber: 100,\n                                            columnNumber: 33\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                            onClick: ()=>deleteIngredient(ingredient.id),\n                                            className: \"text-xl bg-red-600 rounded-md shadow-lg text-white px-1 hover:bg-red-800\",\n                                            children: \"Delete\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                            lineNumber: 101,\n                                            columnNumber: 33\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                    lineNumber: 99,\n                                    columnNumber: 29\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                            lineNumber: 97,\n                            columnNumber: 25\n                        }, this);\n                    }),\n                    ingredients.length !== 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>clearAll(),\n                        className: \"w-1/6 rounded-md bg-red-600 text-white px-1 self-center\",\n                        children: \"Clear All\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 107,\n                        columnNumber: 21\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                lineNumber: 93,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>initDrinks(ingredients),\n                className: \"text-xl bg-blue-600 rounded-md shadow-lg text-white px-5 py-2 hover:bg-blue-800\",\n                children: \"Generate Drinks!\"\n            }, void 0, false, {\n                fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                lineNumber: 111,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col gap-2 w-5/6\",\n                children: [\n                    drinks.length === 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-white self-center\",\n                        children: \"No Drinks Listed\"\n                    }, void 0, false, {\n                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                        lineNumber: 113,\n                        columnNumber: 38\n                    }, this),\n                    drinks.map((drink)=>{\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-slate-600 flex justify-between items-center gap-2 text-white rounded-md shadow-md px-3 py-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"text-2xl\",\n                                            children: drink.title\n                                        }, void 0, false, {\n                                            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                            lineNumber: 118,\n                                            columnNumber: 23\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"\",\n                                            children: [\n                                                drink.diff === \"Easy\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-2xl text-green-600\",\n                                                    children: \"Easy\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                                    lineNumber: 121,\n                                                    columnNumber: 25\n                                                }, this),\n                                                drink.diff === \"Medium\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-2xl text-orange-600\",\n                                                    children: \"Medium\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                                    lineNumber: 124,\n                                                    columnNumber: 25\n                                                }, this),\n                                                drink.diff === \"Advanced\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-2xl text-red-600\",\n                                                    children: \"Advanced\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                                    lineNumber: 127,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                            lineNumber: 119,\n                                            columnNumber: 23\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                    lineNumber: 117,\n                                    columnNumber: 21\n                                }, this),\n                                drink.desc.map((descText)=>{\n                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-white text-lg\",\n                                        children: descText\n                                    }, void 0, false, {\n                                        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                                        lineNumber: 133,\n                                        columnNumber: 29\n                                    }, this);\n                                })\n                            ]\n                        }, void 0, true);\n                    })\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n                lineNumber: 112,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/gogren/projects/Drink-Generator/src/app/ingredients/page.tsx\",\n        lineNumber: 86,\n        columnNumber: 9\n    }, this);\n}\n_s(ingredients, \"nobSitd2Dxhsp4RAvbE6JzilpkA=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ingredients/page.tsx\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fgogren%2Fprojects%2FDrink-Generator%2Fsrc%2Fapp%2Fingredients%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);